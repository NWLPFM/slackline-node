// server.js

// Node.js implementation of slackline â€“ https://github.com/ernesto-jimenez/slackline


// BASE SETUP
// ========================================================================================

// required modules
var settings 	= require ('./settings');
var express 	= require('express');
var bodyParser 	= require('body-parser');
var http		= require('http');
var https		= require('https');
var querystring = require('querystring');
var request		= require('request');
var crypto		= require('crypto');

// create an instance of express
var app = express();

// configure the app to use bodyParser()
// this will allow us to interpret the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

var port = process.env.PORT || 8080;


// ROUTES
// ========================================================================================

var router = express.Router();

// test route to make sure everything is working
router.get('/', function(req, res) {
	res.json({ message: 'hooray! welcome to slackline!' });
});

router.all('/bridge', function(req, res) {
	var username = req.body.user_name;
	var userid = req.body.user_id;
	var text = req.body.text;
	var domain = req.query.domain;
	var token = req.query.token;

	// to avoid infinite loops, don't post messages generated by slackbot
	if (username == "slackbot") {
		console.log("don't reflect this message, it's from slackbot")
		return
	} else {
		mirrorMessage(username, userid, text, domain, token, sendPost);
		res.end('Message forwarded!');
	};
});

app.use(router);


// START THE SERVER
// ========================================================================================

app.listen(port);
console.log('slackline is running on port ' + port);


// FUNCTIONS
// ========================================================================================


// calculate an md5 hash of the user's email address, then pass that to the sendPost function
function mirrorMessage(username, userid, text, domain, token, callback) {
	var url = 'https://slack.com/api/users.info?token=' + settings.tokens[domain] + '&user=' + userid;
	var email_hash;

	https.get(url, function(res) {
		var body = '';

		res.on('data', function(chunk) {
			body += chunk;
		});

		res.on('end', function() {
			var userResponse = JSON.parse(body);
			email_hash = crypto.createHash('md5').update(userResponse.user.profile.email).digest('hex');
			callback(email_hash, username, text, domain, token);
		});
	}).on('error', function(e) {
		console.log('Got error: ' + e);
	});
};


// Send a POST to the target Slack instance
var sendPost = function(email_hash, username, text, domain, token) {
	var options = {
		uri: 'https://' + domain + settings.postUrl + token,
		method: 'POST',
		json: {
			'username' : username,
			'text' : text,
			'icon_url' : 'http://www.gravatar.com/avatar/' + email_hash
		}
	};

	request(options, function(error, response, body) {
		if(!error && response.statusCode == 200) {
			console.log('Success!');
		} else {
			console.log(response);
		}
	});
};
